//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:\Poc and Personal\AntlrDraw\Draw.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IDrawListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public partial class DrawBaseListener : IDrawListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="DrawParser.prog"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProg([NotNull] DrawParser.ProgContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DrawParser.prog"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProg([NotNull] DrawParser.ProgContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>init</c>
	/// labeled alternative in <see cref="DrawParser.stm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInit([NotNull] DrawParser.InitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>init</c>
	/// labeled alternative in <see cref="DrawParser.stm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInit([NotNull] DrawParser.InitContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>up</c>
	/// labeled alternative in <see cref="DrawParser.stm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUp([NotNull] DrawParser.UpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>up</c>
	/// labeled alternative in <see cref="DrawParser.stm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUp([NotNull] DrawParser.UpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>down</c>
	/// labeled alternative in <see cref="DrawParser.stm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDown([NotNull] DrawParser.DownContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>down</c>
	/// labeled alternative in <see cref="DrawParser.stm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDown([NotNull] DrawParser.DownContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>left</c>
	/// labeled alternative in <see cref="DrawParser.stm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLeft([NotNull] DrawParser.LeftContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>left</c>
	/// labeled alternative in <see cref="DrawParser.stm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLeft([NotNull] DrawParser.LeftContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>right</c>
	/// labeled alternative in <see cref="DrawParser.stm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRight([NotNull] DrawParser.RightContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>right</c>
	/// labeled alternative in <see cref="DrawParser.stm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRight([NotNull] DrawParser.RightContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>draw</c>
	/// labeled alternative in <see cref="DrawParser.stm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDraw([NotNull] DrawParser.DrawContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>draw</c>
	/// labeled alternative in <see cref="DrawParser.stm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDraw([NotNull] DrawParser.DrawContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>display</c>
	/// labeled alternative in <see cref="DrawParser.stm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDisplay([NotNull] DrawParser.DisplayContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>display</c>
	/// labeled alternative in <see cref="DrawParser.stm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDisplay([NotNull] DrawParser.DisplayContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
