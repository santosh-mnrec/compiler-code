//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:\Poc and Personal\AntlrDraw\Draw.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public partial class DrawLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		Up=1, Down=2, Left=3, Right=4, Init=5, Draw=6, Display=7, NUMBER=8, WS=9;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"U", "P", "D", "O", "W", "N", "L", "E", "F", "T", "R", "I", "G", "H", 
		"A", "S", "Y", "Up", "Down", "Left", "Right", "Init", "Draw", "Display", 
		"NUMBER", "WS"
	};


	public DrawLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public DrawLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
	};
	private static readonly string[] _SymbolicNames = {
		null, "Up", "Down", "Left", "Right", "Init", "Draw", "Display", "NUMBER", 
		"WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Draw.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static DrawLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\v', '\x8A', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x4', '\x18', '\t', 
		'\x18', '\x4', '\x19', '\t', '\x19', '\x4', '\x1A', '\t', '\x1A', '\x4', 
		'\x1B', '\t', '\x1B', '\x3', '\x2', '\x3', '\x2', '\x3', '\x3', '\x3', 
		'\x3', '\x3', '\x4', '\x3', '\x4', '\x3', '\x5', '\x3', '\x5', '\x3', 
		'\x6', '\x3', '\x6', '\x3', '\a', '\x3', '\a', '\x3', '\b', '\x3', '\b', 
		'\x3', '\t', '\x3', '\t', '\x3', '\n', '\x3', '\n', '\x3', '\v', '\x3', 
		'\v', '\x3', '\f', '\x3', '\f', '\x3', '\r', '\x3', '\r', '\x3', '\xE', 
		'\x3', '\xE', '\x3', '\xF', '\x3', '\xF', '\x3', '\x10', '\x3', '\x10', 
		'\x3', '\x11', '\x3', '\x11', '\x3', '\x12', '\x3', '\x12', '\x3', '\x13', 
		'\x3', '\x13', '\x3', '\x13', '\x3', '\x14', '\x3', '\x14', '\x3', '\x14', 
		'\x3', '\x14', '\x3', '\x14', '\x3', '\x15', '\x3', '\x15', '\x3', '\x15', 
		'\x3', '\x15', '\x3', '\x15', '\x3', '\x16', '\x3', '\x16', '\x3', '\x16', 
		'\x3', '\x16', '\x3', '\x16', '\x3', '\x16', '\x3', '\x17', '\x3', '\x17', 
		'\x3', '\x17', '\x3', '\x17', '\x3', '\x17', '\x3', '\x18', '\x3', '\x18', 
		'\x3', '\x18', '\x3', '\x18', '\x3', '\x18', '\x3', '\x19', '\x3', '\x19', 
		'\x3', '\x19', '\x3', '\x19', '\x3', '\x19', '\x3', '\x19', '\x3', '\x19', 
		'\x3', '\x19', '\x3', '\x1A', '\x6', '\x1A', '\x80', '\n', '\x1A', '\r', 
		'\x1A', '\xE', '\x1A', '\x81', '\x3', '\x1B', '\x6', '\x1B', '\x85', '\n', 
		'\x1B', '\r', '\x1B', '\xE', '\x1B', '\x86', '\x3', '\x1B', '\x3', '\x1B', 
		'\x2', '\x2', '\x1C', '\x3', '\x2', '\x5', '\x2', '\a', '\x2', '\t', '\x2', 
		'\v', '\x2', '\r', '\x2', '\xF', '\x2', '\x11', '\x2', '\x13', '\x2', 
		'\x15', '\x2', '\x17', '\x2', '\x19', '\x2', '\x1B', '\x2', '\x1D', '\x2', 
		'\x1F', '\x2', '!', '\x2', '#', '\x2', '%', '\x3', '\'', '\x4', ')', '\x5', 
		'+', '\x6', '-', '\a', '/', '\b', '\x31', '\t', '\x33', '\n', '\x35', 
		'\v', '\x3', '\x2', '\x15', '\x4', '\x2', 'W', 'W', 'w', 'w', '\x4', '\x2', 
		'R', 'R', 'r', 'r', '\x4', '\x2', '\x46', '\x46', '\x66', '\x66', '\x4', 
		'\x2', 'Q', 'Q', 'q', 'q', '\x4', '\x2', 'Y', 'Y', 'y', 'y', '\x4', '\x2', 
		'P', 'P', 'p', 'p', '\x4', '\x2', 'N', 'N', 'n', 'n', '\x4', '\x2', 'G', 
		'G', 'g', 'g', '\x4', '\x2', 'H', 'H', 'h', 'h', '\x4', '\x2', 'V', 'V', 
		'v', 'v', '\x4', '\x2', 'T', 'T', 't', 't', '\x4', '\x2', 'K', 'K', 'k', 
		'k', '\x4', '\x2', 'I', 'I', 'i', 'i', '\x4', '\x2', 'J', 'J', 'j', 'j', 
		'\x4', '\x2', '\x43', '\x43', '\x63', '\x63', '\x4', '\x2', 'U', 'U', 
		'u', 'u', '\x4', '\x2', '[', '[', '{', '{', '\x3', '\x2', '\x32', ';', 
		'\x5', '\x2', '\v', '\f', '\xF', '\xF', '\"', '\"', '\x2', 'z', '\x2', 
		'%', '\x3', '\x2', '\x2', '\x2', '\x2', '\'', '\x3', '\x2', '\x2', '\x2', 
		'\x2', ')', '\x3', '\x2', '\x2', '\x2', '\x2', '+', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '-', '\x3', '\x2', '\x2', '\x2', '\x2', '/', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x31', '\x3', '\x2', '\x2', '\x2', '\x2', '\x33', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x35', '\x3', '\x2', '\x2', '\x2', 
		'\x3', '\x37', '\x3', '\x2', '\x2', '\x2', '\x5', '\x39', '\x3', '\x2', 
		'\x2', '\x2', '\a', ';', '\x3', '\x2', '\x2', '\x2', '\t', '=', '\x3', 
		'\x2', '\x2', '\x2', '\v', '?', '\x3', '\x2', '\x2', '\x2', '\r', '\x41', 
		'\x3', '\x2', '\x2', '\x2', '\xF', '\x43', '\x3', '\x2', '\x2', '\x2', 
		'\x11', '\x45', '\x3', '\x2', '\x2', '\x2', '\x13', 'G', '\x3', '\x2', 
		'\x2', '\x2', '\x15', 'I', '\x3', '\x2', '\x2', '\x2', '\x17', 'K', '\x3', 
		'\x2', '\x2', '\x2', '\x19', 'M', '\x3', '\x2', '\x2', '\x2', '\x1B', 
		'O', '\x3', '\x2', '\x2', '\x2', '\x1D', 'Q', '\x3', '\x2', '\x2', '\x2', 
		'\x1F', 'S', '\x3', '\x2', '\x2', '\x2', '!', 'U', '\x3', '\x2', '\x2', 
		'\x2', '#', 'W', '\x3', '\x2', '\x2', '\x2', '%', 'Y', '\x3', '\x2', '\x2', 
		'\x2', '\'', '\\', '\x3', '\x2', '\x2', '\x2', ')', '\x61', '\x3', '\x2', 
		'\x2', '\x2', '+', '\x66', '\x3', '\x2', '\x2', '\x2', '-', 'l', '\x3', 
		'\x2', '\x2', '\x2', '/', 'q', '\x3', '\x2', '\x2', '\x2', '\x31', 'v', 
		'\x3', '\x2', '\x2', '\x2', '\x33', '\x7F', '\x3', '\x2', '\x2', '\x2', 
		'\x35', '\x84', '\x3', '\x2', '\x2', '\x2', '\x37', '\x38', '\t', '\x2', 
		'\x2', '\x2', '\x38', '\x4', '\x3', '\x2', '\x2', '\x2', '\x39', ':', 
		'\t', '\x3', '\x2', '\x2', ':', '\x6', '\x3', '\x2', '\x2', '\x2', ';', 
		'<', '\t', '\x4', '\x2', '\x2', '<', '\b', '\x3', '\x2', '\x2', '\x2', 
		'=', '>', '\t', '\x5', '\x2', '\x2', '>', '\n', '\x3', '\x2', '\x2', '\x2', 
		'?', '@', '\t', '\x6', '\x2', '\x2', '@', '\f', '\x3', '\x2', '\x2', '\x2', 
		'\x41', '\x42', '\t', '\a', '\x2', '\x2', '\x42', '\xE', '\x3', '\x2', 
		'\x2', '\x2', '\x43', '\x44', '\t', '\b', '\x2', '\x2', '\x44', '\x10', 
		'\x3', '\x2', '\x2', '\x2', '\x45', '\x46', '\t', '\t', '\x2', '\x2', 
		'\x46', '\x12', '\x3', '\x2', '\x2', '\x2', 'G', 'H', '\t', '\n', '\x2', 
		'\x2', 'H', '\x14', '\x3', '\x2', '\x2', '\x2', 'I', 'J', '\t', '\v', 
		'\x2', '\x2', 'J', '\x16', '\x3', '\x2', '\x2', '\x2', 'K', 'L', '\t', 
		'\f', '\x2', '\x2', 'L', '\x18', '\x3', '\x2', '\x2', '\x2', 'M', 'N', 
		'\t', '\r', '\x2', '\x2', 'N', '\x1A', '\x3', '\x2', '\x2', '\x2', 'O', 
		'P', '\t', '\xE', '\x2', '\x2', 'P', '\x1C', '\x3', '\x2', '\x2', '\x2', 
		'Q', 'R', '\t', '\xF', '\x2', '\x2', 'R', '\x1E', '\x3', '\x2', '\x2', 
		'\x2', 'S', 'T', '\t', '\x10', '\x2', '\x2', 'T', ' ', '\x3', '\x2', '\x2', 
		'\x2', 'U', 'V', '\t', '\x11', '\x2', '\x2', 'V', '\"', '\x3', '\x2', 
		'\x2', '\x2', 'W', 'X', '\t', '\x12', '\x2', '\x2', 'X', '$', '\x3', '\x2', 
		'\x2', '\x2', 'Y', 'Z', '\x5', '\x3', '\x2', '\x2', 'Z', '[', '\x5', '\x5', 
		'\x3', '\x2', '[', '&', '\x3', '\x2', '\x2', '\x2', '\\', ']', '\x5', 
		'\a', '\x4', '\x2', ']', '^', '\x5', '\t', '\x5', '\x2', '^', '_', '\x5', 
		'\v', '\x6', '\x2', '_', '`', '\x5', '\r', '\a', '\x2', '`', '(', '\x3', 
		'\x2', '\x2', '\x2', '\x61', '\x62', '\x5', '\xF', '\b', '\x2', '\x62', 
		'\x63', '\x5', '\x11', '\t', '\x2', '\x63', '\x64', '\x5', '\x13', '\n', 
		'\x2', '\x64', '\x65', '\x5', '\x15', '\v', '\x2', '\x65', '*', '\x3', 
		'\x2', '\x2', '\x2', '\x66', 'g', '\x5', '\x17', '\f', '\x2', 'g', 'h', 
		'\x5', '\x19', '\r', '\x2', 'h', 'i', '\x5', '\x1B', '\xE', '\x2', 'i', 
		'j', '\x5', '\x1D', '\xF', '\x2', 'j', 'k', '\x5', '\x15', '\v', '\x2', 
		'k', ',', '\x3', '\x2', '\x2', '\x2', 'l', 'm', '\x5', '\x19', '\r', '\x2', 
		'm', 'n', '\x5', '\r', '\a', '\x2', 'n', 'o', '\x5', '\x19', '\r', '\x2', 
		'o', 'p', '\x5', '\x15', '\v', '\x2', 'p', '.', '\x3', '\x2', '\x2', '\x2', 
		'q', 'r', '\x5', '\a', '\x4', '\x2', 'r', 's', '\x5', '\x17', '\f', '\x2', 
		's', 't', '\x5', '\x1F', '\x10', '\x2', 't', 'u', '\x5', '\v', '\x6', 
		'\x2', 'u', '\x30', '\x3', '\x2', '\x2', '\x2', 'v', 'w', '\x5', '\a', 
		'\x4', '\x2', 'w', 'x', '\x5', '\x19', '\r', '\x2', 'x', 'y', '\x5', '!', 
		'\x11', '\x2', 'y', 'z', '\x5', '\x5', '\x3', '\x2', 'z', '{', '\x5', 
		'\xF', '\b', '\x2', '{', '|', '\x5', '\x1F', '\x10', '\x2', '|', '}', 
		'\x5', '#', '\x12', '\x2', '}', '\x32', '\x3', '\x2', '\x2', '\x2', '~', 
		'\x80', '\t', '\x13', '\x2', '\x2', '\x7F', '~', '\x3', '\x2', '\x2', 
		'\x2', '\x80', '\x81', '\x3', '\x2', '\x2', '\x2', '\x81', '\x7F', '\x3', 
		'\x2', '\x2', '\x2', '\x81', '\x82', '\x3', '\x2', '\x2', '\x2', '\x82', 
		'\x34', '\x3', '\x2', '\x2', '\x2', '\x83', '\x85', '\t', '\x14', '\x2', 
		'\x2', '\x84', '\x83', '\x3', '\x2', '\x2', '\x2', '\x85', '\x86', '\x3', 
		'\x2', '\x2', '\x2', '\x86', '\x84', '\x3', '\x2', '\x2', '\x2', '\x86', 
		'\x87', '\x3', '\x2', '\x2', '\x2', '\x87', '\x88', '\x3', '\x2', '\x2', 
		'\x2', '\x88', '\x89', '\b', '\x1B', '\x2', '\x2', '\x89', '\x36', '\x3', 
		'\x2', '\x2', '\x2', '\x5', '\x2', '\x81', '\x86', '\x3', '\b', '\x2', 
		'\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
